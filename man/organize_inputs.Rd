% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ui_utils.R
\name{organize_inputs}
\alias{organize_inputs}
\title{Function to organize inputs into a grid layout}
\usage{
organize_inputs(
  tag_list,
  title = NULL,
  tack = NULL,
  columns = NULL,
  rows = NULL
)
}
\arguments{
\item{tag_list}{A tagList containing UI inputs or a named list
containing multiple tagLists containing UI inputs.}

\item{title}{An optional title for the grid, should be a UI element,
e.g. h3("Title").}

\item{tack}{An optional UI input to tack onto the end of the grid.}

\item{columns}{Number of columns.}

\item{rows}{Number of rows.}
}
\value{
A Shiny tagList with inputs organized into a grid, optionally
nested inside a tabsetPanel.
}
\description{
Function to organize inputs into a grid layout
}
\examples{
library(ShinyBaseModules)
# Example 1: Basic usage with a simple grid
ui_inputs <- tagList(
  textInput("name", "Name"),
  numericInput("age", "Age", value = 30),
  selectInput("gender", "Gender", choices = c("Male", "Female", "Other"))
)
organize_inputs(ui_inputs, columns = 2, rows = 2)

# Example 2: Using a named list to create tabs
ui_inputs_tabs <- list(
  Personal = tagList(
    textInput("firstname", "First Name"),
    textInput("lastname", "Last Name")
  ),
  Settings = tagList(
    checkboxInput("newsletter", "Subscribe to newsletter", value = TRUE),
    sliderInput("volume", "Volume", min = 0, max = 100, value = 50)
  )
)
organize_inputs(ui_inputs_tabs)

# Example 3: Adding an additional UI element with 'tack'
additional_ui <- actionButton("submit", "Submit")
organize_inputs(ui_inputs, tack = additional_ui, columns = 3)

# Example 4: Handling a case with more inputs than grid cells
many_inputs <- tagList(replicate(10, textInput("input", "Input")))
organize_inputs(many_inputs, columns = 3) # Creates more than one row

}
\author{
Jared Andrews
}
